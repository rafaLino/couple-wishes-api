
name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      ["main"]

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  SERVICE: ${{ vars.SERVICE }}
  CREDENTIALS: ${{ secrets.CREDENTIALS }}
  GAR_NAME: ${{ vars.GAR_NAME }}
  CONNECTION_STRING: ${{ secrets.CONNECTION_STRING }}
  API_KEY: ${{ secrets.API_KEY }}
  GRAPH_API_TOKEN: ${{ secrets.GRAPH_API_TOKEN }} 
  API_SECRET: ${{ secrets.API_SECRET }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  WEBHOOK_VERIFY_TOKEN: ${{ secrets.WEBHOOK_VERIFY_TOKEN }}
  APP_PORT: ${{ vars.APP_PORT }}
  MODEL_NAME: ${{ vars.MODEL_NAME }}

jobs:
  deploy:
    runs-on: 'ubuntu-latest'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Configure Workload Identity Federation and generate an access token.
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ env.CREDENTIALS }}'

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: 'Docker Auth'
        run: |
             gcloud auth configure-docker "${{ env.REGION }}-docker.pkg.dev"

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
      
      - name: 'Deploy to Cloud Run'
        uses: 'google-github-actions/deploy-cloudrun@v2' # google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}'
        env_vars: |-
          CONNECTION_STRING=${{ env.CONNECTION_STRING }} \
          API_KEY=${{ env.API_KEY }} \
          GRAPH_API_TOKEN=${{ env.GRAPH_API_TOKEN }} \
          API_SECRET=${{ env.API_SECRET }} \
          JWT_SECRET-${{ env.JWT_SECRET }} \
          WEBHOOK_VERIFY_TOKEN=${{ env.WEBHOOK_VERIFY_TOKEN }} \
          APP_PORT=${{ env.APP_PORT }} \
          MODEL_NAME=${{ env.MODEL_NAME }} .
          

      # If required, use the Cloud Run URL output in later steps
      - name: 'Show output'
        run: |2-

          echo ${{ steps.deploy.outputs.url }}
